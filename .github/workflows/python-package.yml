# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Trunk Check
      uses: trunk-io/trunk-action@v1.1.9
      with:
        # Path to Trunk Launcher. If not provided, we'll look for it the repo root, `.trunk/bin` and `tools/`. If it can't be found anywhere and is not provided explicitly, we'll download it on demand.
        # trunk-path: # optional
        # # Label to append to the check run name (useful if running Trunk Check on multiple platforms)
        # label: # optional
        # # Extra arguments to pass to trunk
        # arguments: # optional
        # # Trunk check mode. Leave unset to autodetect. Set to 'all' to check the entire repository. Set to 'populate_cache_only' in a dedicated workflow to populate the GitHub Actions cache with Trunk artifacts (see docs for more details).
        # check-mode: # optional
        # # If set to "hold-the-line", computes new/existing issues by comparing to previous upload.
        # check-all-mode: # optional, default is 
        # # Check run ID. If set, posts annotations using CheckService.
        # check-run-id: # optional
        # # Cache trunk downloads and results between runs. Caching is only needed when using ephemeral CI runners.
        # cache: # optional, default is true
        # # A key unique to the repo/branch this action is being run on (e.g. the repo name and branch)
        # cache-key: # optional
        # # Steps to run after auto-init / before check
        # post-init: # optional
        # # For overriding github.token
        # github-token: # optional
        # # You can find a per-repo API token in the Trunk web app settings. This will cause results to be uploaded to the Trunk web app if this job is a scheduled job running on a branch, or if `check-mode` is set to 'all'.
        # trunk-token: # optional
        # # Upload series name, for when `trunk-token` is provided. If not provided, we'll use the branch name.
        # upload-series: # optional
        # # Save annotations as an artifact instead of posting them from this action. This is neccesary if your repository will be used with forks as they will will not have permissions to upload annotations. By default forks will be auto-detected.
        # save-annotations: # optional, default is auto
        # # Post annotations previously uploaded with the `save-annotations` option (specific to posting annotations from forks).
        # post-annotations: # optional, default is false
        # # Install dependencies for trunk check that the trunk CLI does not manage. This is only necessary if you have Node dependencies in your package.json that your Node linters need (e.g. eslint dependencies, or @types packages).
        # setup-deps: # optional, default is false
        # # Internal use only
        # debug: # optional, default is false
              
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
