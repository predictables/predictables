# This is the Dockerfile that defines my development environment 
# for predictables. It is based on the official Python 3.11 image
# and installs the required packages from the requirements.txt file.

# Use an official Python runtime as a parent image
FROM ubuntu:20.04

# Set the working directory in the container to root
WORKDIR /

# Add the current directory contents into the container at root
ADD . /

# Set the environment variable to avoid warnings
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_VERSION=3.11.8

# Update the package list and install software
RUN apt-get update && apt-get install -y \
    bash \
    git \
    build-essential \
    libffi-dev \
    libgdbm-dev \
    libncurses-dev \
    libnss3-dev \
    libssl-dev \
    libreadline-dev \
    libsqlite3-dev \
    wget \
    curl \
    llvm \
    liblzma-dev \
    zlib1g-dev \
    libbz2-dev \
    libffi-dev \
    libssl-dev \
    && apt-get clean


# Download and install Python 3.11
WORKDIR /tmp
RUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz
RUN tar xzf Python-${PYTHON_VERSION}.tgz
WORKDIR /tmp/Python-${PYTHON_VERSION}
RUN ./configure --enable-optimizations
RUN make altinstall
RUN rm -r /tmp/Python-${PYTHON_VERSION}
WORKDIR /

# Check that Python 3.11 is installed
RUN python3.11 --version

# Install pip, venv, and other required packages
RUN apt-get install -y python3-pip python3-venv python3-dev python3-wheel python3-setuptools

# Update pip
RUN python3.11 -m pip install --upgrade pip

# Create a virtual environment and activate it
RUN python3.11 -m venv /.venv
ENV PATH="/.venv/bin:$PATH"



# Make port 80 available to the world outside this container
EXPOSE 80

# Run bash when the container launches
CMD ["/bin/sh"]
