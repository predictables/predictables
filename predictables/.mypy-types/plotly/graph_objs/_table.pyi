from plotly.basedatatypes import BaseTraceType as _BaseTraceType
from typing import Any

class Table(_BaseTraceType):
    @property
    def cells(self): ...
    @cells.setter
    def cells(self, val) -> None: ...
    @property
    def columnorder(self): ...
    @columnorder.setter
    def columnorder(self, val) -> None: ...
    @property
    def columnordersrc(self): ...
    @columnordersrc.setter
    def columnordersrc(self, val) -> None: ...
    @property
    def columnwidth(self): ...
    @columnwidth.setter
    def columnwidth(self, val) -> None: ...
    @property
    def columnwidthsrc(self): ...
    @columnwidthsrc.setter
    def columnwidthsrc(self, val) -> None: ...
    @property
    def customdata(self): ...
    @customdata.setter
    def customdata(self, val) -> None: ...
    @property
    def customdatasrc(self): ...
    @customdatasrc.setter
    def customdatasrc(self, val) -> None: ...
    @property
    def domain(self): ...
    @domain.setter
    def domain(self, val) -> None: ...
    @property
    def header(self): ...
    @header.setter
    def header(self, val) -> None: ...
    @property
    def hoverinfo(self): ...
    @hoverinfo.setter
    def hoverinfo(self, val) -> None: ...
    @property
    def hoverinfosrc(self): ...
    @hoverinfosrc.setter
    def hoverinfosrc(self, val) -> None: ...
    @property
    def hoverlabel(self): ...
    @hoverlabel.setter
    def hoverlabel(self, val) -> None: ...
    @property
    def ids(self): ...
    @ids.setter
    def ids(self, val) -> None: ...
    @property
    def idssrc(self): ...
    @idssrc.setter
    def idssrc(self, val) -> None: ...
    @property
    def legend(self): ...
    @legend.setter
    def legend(self, val) -> None: ...
    @property
    def legendgrouptitle(self): ...
    @legendgrouptitle.setter
    def legendgrouptitle(self, val) -> None: ...
    @property
    def legendrank(self): ...
    @legendrank.setter
    def legendrank(self, val) -> None: ...
    @property
    def legendwidth(self): ...
    @legendwidth.setter
    def legendwidth(self, val) -> None: ...
    @property
    def meta(self): ...
    @meta.setter
    def meta(self, val) -> None: ...
    @property
    def metasrc(self): ...
    @metasrc.setter
    def metasrc(self, val) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val) -> None: ...
    @property
    def stream(self): ...
    @stream.setter
    def stream(self, val) -> None: ...
    @property
    def uid(self): ...
    @uid.setter
    def uid(self, val) -> None: ...
    @property
    def uirevision(self): ...
    @uirevision.setter
    def uirevision(self, val) -> None: ...
    @property
    def visible(self): ...
    @visible.setter
    def visible(self, val) -> None: ...
    @property
    def type(self): ...
    def __init__(
        self,
        arg: Any | None = ...,
        cells: Any | None = ...,
        columnorder: Any | None = ...,
        columnordersrc: Any | None = ...,
        columnwidth: Any | None = ...,
        columnwidthsrc: Any | None = ...,
        customdata: Any | None = ...,
        customdatasrc: Any | None = ...,
        domain: Any | None = ...,
        header: Any | None = ...,
        hoverinfo: Any | None = ...,
        hoverinfosrc: Any | None = ...,
        hoverlabel: Any | None = ...,
        ids: Any | None = ...,
        idssrc: Any | None = ...,
        legend: Any | None = ...,
        legendgrouptitle: Any | None = ...,
        legendrank: Any | None = ...,
        legendwidth: Any | None = ...,
        meta: Any | None = ...,
        metasrc: Any | None = ...,
        name: Any | None = ...,
        stream: Any | None = ...,
        uid: Any | None = ...,
        uirevision: Any | None = ...,
        visible: Any | None = ...,
        **kwargs
    ) -> None: ...
