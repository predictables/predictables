from plotly.basedatatypes import BaseTraceHierarchyType as _BaseTraceHierarchyType
from typing import Any

class Contours(_BaseTraceHierarchyType):
    @property
    def coloring(self): ...
    @coloring.setter
    def coloring(self, val) -> None: ...
    @property
    def end(self): ...
    @end.setter
    def end(self, val) -> None: ...
    @property
    def labelfont(self): ...
    @labelfont.setter
    def labelfont(self, val) -> None: ...
    @property
    def labelformat(self): ...
    @labelformat.setter
    def labelformat(self, val) -> None: ...
    @property
    def operation(self): ...
    @operation.setter
    def operation(self, val) -> None: ...
    @property
    def showlabels(self): ...
    @showlabels.setter
    def showlabels(self, val) -> None: ...
    @property
    def showlines(self): ...
    @showlines.setter
    def showlines(self, val) -> None: ...
    @property
    def size(self): ...
    @size.setter
    def size(self, val) -> None: ...
    @property
    def start(self): ...
    @start.setter
    def start(self, val) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, val) -> None: ...
    @property
    def value(self): ...
    @value.setter
    def value(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        coloring: Any | None = ...,
        end: Any | None = ...,
        labelfont: Any | None = ...,
        labelformat: Any | None = ...,
        operation: Any | None = ...,
        showlabels: Any | None = ...,
        showlines: Any | None = ...,
        size: Any | None = ...,
        start: Any | None = ...,
        type: Any | None = ...,
        value: Any | None = ...,
        **kwargs
    ) -> None: ...
