from plotly.basedatatypes import BaseTraceHierarchyType as _BaseTraceHierarchyType
from typing import Any

class Line(_BaseTraceHierarchyType):
    @property
    def backoff(self): ...
    @backoff.setter
    def backoff(self, val) -> None: ...
    @property
    def backoffsrc(self): ...
    @backoffsrc.setter
    def backoffsrc(self, val) -> None: ...
    @property
    def color(self): ...
    @color.setter
    def color(self, val) -> None: ...
    @property
    def dash(self): ...
    @dash.setter
    def dash(self, val) -> None: ...
    @property
    def shape(self): ...
    @shape.setter
    def shape(self, val) -> None: ...
    @property
    def simplify(self): ...
    @simplify.setter
    def simplify(self, val) -> None: ...
    @property
    def smoothing(self): ...
    @smoothing.setter
    def smoothing(self, val) -> None: ...
    @property
    def width(self): ...
    @width.setter
    def width(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        backoff: Any | None = ...,
        backoffsrc: Any | None = ...,
        color: Any | None = ...,
        dash: Any | None = ...,
        shape: Any | None = ...,
        simplify: Any | None = ...,
        smoothing: Any | None = ...,
        width: Any | None = ...,
        **kwargs
    ) -> None: ...
