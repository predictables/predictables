from plotly.basedatatypes import BaseTraceHierarchyType as _BaseTraceHierarchyType
from typing import Any

class Dimension(_BaseTraceHierarchyType):
    @property
    def constraintrange(self): ...
    @constraintrange.setter
    def constraintrange(self, val) -> None: ...
    @property
    def label(self): ...
    @label.setter
    def label(self, val) -> None: ...
    @property
    def multiselect(self): ...
    @multiselect.setter
    def multiselect(self, val) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val) -> None: ...
    @property
    def range(self): ...
    @range.setter
    def range(self, val) -> None: ...
    @property
    def templateitemname(self): ...
    @templateitemname.setter
    def templateitemname(self, val) -> None: ...
    @property
    def tickformat(self): ...
    @tickformat.setter
    def tickformat(self, val) -> None: ...
    @property
    def ticktext(self): ...
    @ticktext.setter
    def ticktext(self, val) -> None: ...
    @property
    def ticktextsrc(self): ...
    @ticktextsrc.setter
    def ticktextsrc(self, val) -> None: ...
    @property
    def tickvals(self): ...
    @tickvals.setter
    def tickvals(self, val) -> None: ...
    @property
    def tickvalssrc(self): ...
    @tickvalssrc.setter
    def tickvalssrc(self, val) -> None: ...
    @property
    def values(self): ...
    @values.setter
    def values(self, val) -> None: ...
    @property
    def valuessrc(self): ...
    @valuessrc.setter
    def valuessrc(self, val) -> None: ...
    @property
    def visible(self): ...
    @visible.setter
    def visible(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        constraintrange: Any | None = ...,
        label: Any | None = ...,
        multiselect: Any | None = ...,
        name: Any | None = ...,
        range: Any | None = ...,
        templateitemname: Any | None = ...,
        tickformat: Any | None = ...,
        ticktext: Any | None = ...,
        ticktextsrc: Any | None = ...,
        tickvals: Any | None = ...,
        tickvalssrc: Any | None = ...,
        values: Any | None = ...,
        valuessrc: Any | None = ...,
        visible: Any | None = ...,
        **kwargs
    ) -> None: ...
