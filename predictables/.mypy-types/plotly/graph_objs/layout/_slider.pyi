from plotly.basedatatypes import BaseLayoutHierarchyType as _BaseLayoutHierarchyType
from typing import Any

class Slider(_BaseLayoutHierarchyType):
    @property
    def active(self): ...
    @active.setter
    def active(self, val) -> None: ...
    @property
    def activebgcolor(self): ...
    @activebgcolor.setter
    def activebgcolor(self, val) -> None: ...
    @property
    def bgcolor(self): ...
    @bgcolor.setter
    def bgcolor(self, val) -> None: ...
    @property
    def bordercolor(self): ...
    @bordercolor.setter
    def bordercolor(self, val) -> None: ...
    @property
    def borderwidth(self): ...
    @borderwidth.setter
    def borderwidth(self, val) -> None: ...
    @property
    def currentvalue(self): ...
    @currentvalue.setter
    def currentvalue(self, val) -> None: ...
    @property
    def font(self): ...
    @font.setter
    def font(self, val) -> None: ...
    @property
    def len(self): ...
    @len.setter
    def len(self, val) -> None: ...
    @property
    def lenmode(self): ...
    @lenmode.setter
    def lenmode(self, val) -> None: ...
    @property
    def minorticklen(self): ...
    @minorticklen.setter
    def minorticklen(self, val) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val) -> None: ...
    @property
    def pad(self): ...
    @pad.setter
    def pad(self, val) -> None: ...
    @property
    def steps(self): ...
    @steps.setter
    def steps(self, val) -> None: ...
    @property
    def stepdefaults(self): ...
    @stepdefaults.setter
    def stepdefaults(self, val) -> None: ...
    @property
    def templateitemname(self): ...
    @templateitemname.setter
    def templateitemname(self, val) -> None: ...
    @property
    def tickcolor(self): ...
    @tickcolor.setter
    def tickcolor(self, val) -> None: ...
    @property
    def ticklen(self): ...
    @ticklen.setter
    def ticklen(self, val) -> None: ...
    @property
    def tickwidth(self): ...
    @tickwidth.setter
    def tickwidth(self, val) -> None: ...
    @property
    def transition(self): ...
    @transition.setter
    def transition(self, val) -> None: ...
    @property
    def visible(self): ...
    @visible.setter
    def visible(self, val) -> None: ...
    @property
    def x(self): ...
    @x.setter
    def x(self, val) -> None: ...
    @property
    def xanchor(self): ...
    @xanchor.setter
    def xanchor(self, val) -> None: ...
    @property
    def y(self): ...
    @y.setter
    def y(self, val) -> None: ...
    @property
    def yanchor(self): ...
    @yanchor.setter
    def yanchor(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        active: Any | None = ...,
        activebgcolor: Any | None = ...,
        bgcolor: Any | None = ...,
        bordercolor: Any | None = ...,
        borderwidth: Any | None = ...,
        currentvalue: Any | None = ...,
        font: Any | None = ...,
        len: Any | None = ...,
        lenmode: Any | None = ...,
        minorticklen: Any | None = ...,
        name: Any | None = ...,
        pad: Any | None = ...,
        steps: Any | None = ...,
        stepdefaults: Any | None = ...,
        templateitemname: Any | None = ...,
        tickcolor: Any | None = ...,
        ticklen: Any | None = ...,
        tickwidth: Any | None = ...,
        transition: Any | None = ...,
        visible: Any | None = ...,
        x: Any | None = ...,
        xanchor: Any | None = ...,
        y: Any | None = ...,
        yanchor: Any | None = ...,
        **kwargs
    ) -> None: ...
