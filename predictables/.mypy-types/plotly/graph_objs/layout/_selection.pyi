from plotly.basedatatypes import BaseLayoutHierarchyType as _BaseLayoutHierarchyType
from typing import Any

class Selection(_BaseLayoutHierarchyType):
    @property
    def line(self): ...
    @line.setter
    def line(self, val) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, val) -> None: ...
    @property
    def opacity(self): ...
    @opacity.setter
    def opacity(self, val) -> None: ...
    @property
    def path(self): ...
    @path.setter
    def path(self, val) -> None: ...
    @property
    def templateitemname(self): ...
    @templateitemname.setter
    def templateitemname(self, val) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, val) -> None: ...
    @property
    def x0(self): ...
    @x0.setter
    def x0(self, val) -> None: ...
    @property
    def x1(self): ...
    @x1.setter
    def x1(self, val) -> None: ...
    @property
    def xref(self): ...
    @xref.setter
    def xref(self, val) -> None: ...
    @property
    def y0(self): ...
    @y0.setter
    def y0(self, val) -> None: ...
    @property
    def y1(self): ...
    @y1.setter
    def y1(self, val) -> None: ...
    @property
    def yref(self): ...
    @yref.setter
    def yref(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        line: Any | None = ...,
        name: Any | None = ...,
        opacity: Any | None = ...,
        path: Any | None = ...,
        templateitemname: Any | None = ...,
        type: Any | None = ...,
        x0: Any | None = ...,
        x1: Any | None = ...,
        xref: Any | None = ...,
        y0: Any | None = ...,
        y1: Any | None = ...,
        yref: Any | None = ...,
        **kwargs
    ) -> None: ...
