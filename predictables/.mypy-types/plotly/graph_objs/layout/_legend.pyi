from plotly.basedatatypes import BaseLayoutHierarchyType as _BaseLayoutHierarchyType
from typing import Any

class Legend(_BaseLayoutHierarchyType):
    @property
    def bgcolor(self): ...
    @bgcolor.setter
    def bgcolor(self, val) -> None: ...
    @property
    def bordercolor(self): ...
    @bordercolor.setter
    def bordercolor(self, val) -> None: ...
    @property
    def borderwidth(self): ...
    @borderwidth.setter
    def borderwidth(self, val) -> None: ...
    @property
    def entrywidth(self): ...
    @entrywidth.setter
    def entrywidth(self, val) -> None: ...
    @property
    def entrywidthmode(self): ...
    @entrywidthmode.setter
    def entrywidthmode(self, val) -> None: ...
    @property
    def font(self): ...
    @font.setter
    def font(self, val) -> None: ...
    @property
    def groupclick(self): ...
    @groupclick.setter
    def groupclick(self, val) -> None: ...
    @property
    def grouptitlefont(self): ...
    @grouptitlefont.setter
    def grouptitlefont(self, val) -> None: ...
    @property
    def itemclick(self): ...
    @itemclick.setter
    def itemclick(self, val) -> None: ...
    @property
    def itemdoubleclick(self): ...
    @itemdoubleclick.setter
    def itemdoubleclick(self, val) -> None: ...
    @property
    def itemsizing(self): ...
    @itemsizing.setter
    def itemsizing(self, val) -> None: ...
    @property
    def itemwidth(self): ...
    @itemwidth.setter
    def itemwidth(self, val) -> None: ...
    @property
    def orientation(self): ...
    @orientation.setter
    def orientation(self, val) -> None: ...
    @property
    def title(self): ...
    @title.setter
    def title(self, val) -> None: ...
    @property
    def tracegroupgap(self): ...
    @tracegroupgap.setter
    def tracegroupgap(self, val) -> None: ...
    @property
    def traceorder(self): ...
    @traceorder.setter
    def traceorder(self, val) -> None: ...
    @property
    def uirevision(self): ...
    @uirevision.setter
    def uirevision(self, val) -> None: ...
    @property
    def valign(self): ...
    @valign.setter
    def valign(self, val) -> None: ...
    @property
    def visible(self): ...
    @visible.setter
    def visible(self, val) -> None: ...
    @property
    def x(self): ...
    @x.setter
    def x(self, val) -> None: ...
    @property
    def xanchor(self): ...
    @xanchor.setter
    def xanchor(self, val) -> None: ...
    @property
    def xref(self): ...
    @xref.setter
    def xref(self, val) -> None: ...
    @property
    def y(self): ...
    @y.setter
    def y(self, val) -> None: ...
    @property
    def yanchor(self): ...
    @yanchor.setter
    def yanchor(self, val) -> None: ...
    @property
    def yref(self): ...
    @yref.setter
    def yref(self, val) -> None: ...
    def __init__(
        self,
        arg: Any | None = ...,
        bgcolor: Any | None = ...,
        bordercolor: Any | None = ...,
        borderwidth: Any | None = ...,
        entrywidth: Any | None = ...,
        entrywidthmode: Any | None = ...,
        font: Any | None = ...,
        groupclick: Any | None = ...,
        grouptitlefont: Any | None = ...,
        itemclick: Any | None = ...,
        itemdoubleclick: Any | None = ...,
        itemsizing: Any | None = ...,
        itemwidth: Any | None = ...,
        orientation: Any | None = ...,
        title: Any | None = ...,
        tracegroupgap: Any | None = ...,
        traceorder: Any | None = ...,
        uirevision: Any | None = ...,
        valign: Any | None = ...,
        visible: Any | None = ...,
        x: Any | None = ...,
        xanchor: Any | None = ...,
        xref: Any | None = ...,
        y: Any | None = ...,
        yanchor: Any | None = ...,
        yref: Any | None = ...,
        **kwargs
    ) -> None: ...
