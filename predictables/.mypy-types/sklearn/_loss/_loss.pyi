from typing import Any, ClassVar

class CyAbsoluteError(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyExponentialLoss(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfBinomialLoss(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfGammaLoss(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfMultinomialLoss(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_proba(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_proba(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_proba(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_proba(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def gradient_proba(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfPoissonLoss(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfSquaredError(CyLossFunction):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfTweedieLoss(CyLossFunction):
    power: ClassVar[getset_descriptor] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHalfTweedieLossIdentity(CyLossFunction):
    power: ClassVar[getset_descriptor] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyHuberLoss(CyLossFunction):
    delta: ClassVar[getset_descriptor] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyLossFunction:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss_gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss_gradient(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def loss_gradient(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CyPinballLoss(CyLossFunction):
    quantile: ClassVar[getset_descriptor] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __pyx_fuse_0_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_0_1loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_0loss(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1gradient_hessian(self, *args, **kwargs) -> Any: ...
    def __pyx_fuse_1_1loss(self, *args, **kwargs) -> Any: ...
    def gradient(self, *args, **kwargs) -> Any: ...
    def gradient_hessian(self, *args, **kwargs) -> Any: ...
    def loss(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

def __pyx_unpickle_CyAbsoluteError(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyExponentialLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfBinomialLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfGammaLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfMultinomialLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfPoissonLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfSquaredError(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfTweedieLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHalfTweedieLossIdentity(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyHuberLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyLossFunction(*args, **kwargs) -> Any: ...
def __pyx_unpickle_CyPinballLoss(*args, **kwargs) -> Any: ...
def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
