from typing import Any, ClassVar

class ArrayDataset32(SequentialDataset32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class ArrayDataset64(SequentialDataset64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CSRDataset32(SequentialDataset32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class CSRDataset64(SequentialDataset64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SequentialDataset32:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def _next_py(self, *args, **kwargs) -> Any: ...
    def _random_py(self, *args, **kwargs) -> Any: ...
    def _sample_py(self, *args, **kwargs) -> Any: ...
    def _shuffle_py(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SequentialDataset64:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def _next_py(self, *args, **kwargs) -> Any: ...
    def _random_py(self, *args, **kwargs) -> Any: ...
    def _sample_py(self, *args, **kwargs) -> Any: ...
    def _shuffle_py(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
