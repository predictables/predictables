from typing import Any, ClassVar

import scipy.sparse._csr
import scipy.sparse._matrix

issparse: function

class DatasetsPair32:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def get_for(cls, *args, **kwargs) -> Any: ...
    @classmethod
    def unpack_csr_matrix(cls, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class DatasetsPair64:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def get_for(cls, *args, **kwargs) -> Any: ...
    @classmethod
    def unpack_csr_matrix(cls, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class DenseDenseDatasetsPair32(DatasetsPair32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class DenseDenseDatasetsPair64(DatasetsPair64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class DenseSparseDatasetsPair32(DatasetsPair32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class DenseSparseDatasetsPair64(DatasetsPair64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SparseDenseDatasetsPair32(DatasetsPair32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SparseDenseDatasetsPair64(DatasetsPair64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SparseSparseDatasetsPair32(DatasetsPair32):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class SparseSparseDatasetsPair64(DatasetsPair64):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class csr_matrix(scipy.sparse._matrix.spmatrix, scipy.sparse._csr._csr_base): ...

def __pyx_unpickle_DatasetsPair32(*args, **kwargs) -> Any: ...
def __pyx_unpickle_DatasetsPair64(*args, **kwargs) -> Any: ...
def __pyx_unpickle_DenseDenseDatasetsPair32(*args, **kwargs) -> Any: ...
def __pyx_unpickle_DenseDenseDatasetsPair64(*args, **kwargs) -> Any: ...
def __pyx_unpickle_DenseSparseDatasetsPair32(*args, **kwargs) -> Any: ...
def __pyx_unpickle_DenseSparseDatasetsPair64(*args, **kwargs) -> Any: ...
def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
def __pyx_unpickle_SparseDenseDatasetsPair32(*args, **kwargs) -> Any: ...
def __pyx_unpickle_SparseDenseDatasetsPair64(*args, **kwargs) -> Any: ...
def __pyx_unpickle_SparseSparseDatasetsPair32(*args, **kwargs) -> Any: ...
def __pyx_unpickle_SparseSparseDatasetsPair64(*args, **kwargs) -> Any: ...
