from ...utils._param_validation import (
    Interval as Interval,
    StrOptions as StrOptions,
    validate_params as validate_params,
)
from ...utils.multiclass import type_of_target as type_of_target
from ...utils.validation import (
    check_array as check_array,
    check_consistent_length as check_consistent_length,
)
from ._expected_mutual_info_fast import (
    expected_mutual_information as expected_mutual_information,
)
from typing import Any

def check_clusterings(labels_true, labels_pred): ...
def contingency_matrix(
    labels_true, labels_pred, *, eps: Any | None = ..., sparse: bool = ..., dtype=...
): ...
def pair_confusion_matrix(labels_true, labels_pred): ...
def rand_score(labels_true, labels_pred): ...
def adjusted_rand_score(labels_true, labels_pred): ...
def homogeneity_completeness_v_measure(
    labels_true, labels_pred, *, beta: float = ...
): ...
def homogeneity_score(labels_true, labels_pred): ...
def completeness_score(labels_true, labels_pred): ...
def v_measure_score(labels_true, labels_pred, *, beta: float = ...): ...
def mutual_info_score(labels_true, labels_pred, *, contingency: Any | None = ...): ...
def adjusted_mutual_info_score(
    labels_true, labels_pred, *, average_method: str = ...
): ...
def normalized_mutual_info_score(
    labels_true, labels_pred, *, average_method: str = ...
): ...
def fowlkes_mallows_score(labels_true, labels_pred, *, sparse: bool = ...): ...
def entropy(labels): ...
