from typing import Any, ClassVar

class ClassificationCriterion(Criterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...

class Criterion:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __getstate__(self) -> Any: ...
    def __reduce_cython__(self, *args, **kwargs) -> Any: ...
    def __setstate__(self, state) -> Any: ...
    def __setstate_cython__(self, *args, **kwargs) -> Any: ...

class Entropy(ClassificationCriterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class FriedmanMSE(MSE):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class Gini(ClassificationCriterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class MAE(RegressionCriterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class MSE(RegressionCriterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class Poisson(RegressionCriterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...

class RegressionCriterion(Criterion):
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...

def __pyx_unpickle_Criterion(*args, **kwargs) -> Any: ...
def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
