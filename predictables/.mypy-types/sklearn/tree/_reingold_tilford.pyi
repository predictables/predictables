from typing import Any

class DrawTree:
    x: Any
    y: Any
    tree: Any
    children: Any
    parent: Any
    thread: Any
    mod: int
    ancestor: Any
    change: int
    number: Any
    def __init__(
        self, tree, parent: Any | None = ..., depth: int = ..., number: int = ...
    ) -> None: ...
    def left(self): ...
    def right(self): ...
    def lbrother(self): ...
    def get_lmost_sibling(self): ...
    lmost_sibling: Any
    def max_extents(self): ...

def buchheim(tree): ...
def third_walk(tree, n) -> None: ...
def first_walk(v, distance: float = ...): ...
def apportion(v, default_ancestor, distance): ...
def move_subtree(wl, wr, shift) -> None: ...
def execute_shifts(v) -> None: ...
def ancestor(vil, v, default_ancestor): ...
def second_walk(v, m: int = ..., depth: int = ..., min: Any | None = ...): ...

class Tree:
    label: Any
    node_id: Any
    children: Any
    def __init__(self, label: str = ..., node_id: int = ..., *children) -> None: ...
