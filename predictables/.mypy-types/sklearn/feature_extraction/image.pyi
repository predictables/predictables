from ..base import BaseEstimator, TransformerMixin
from typing import Any

def img_to_graph(
    img, *, mask: Any | None = ..., return_as=..., dtype: Any | None = ...
): ...
def grid_to_graph(
    n_x, n_y, n_z: int = ..., *, mask: Any | None = ..., return_as=..., dtype=...
): ...
def extract_patches_2d(
    image, patch_size, *, max_patches: Any | None = ..., random_state: Any | None = ...
): ...
def reconstruct_from_patches_2d(patches, image_size): ...

class PatchExtractor(TransformerMixin, BaseEstimator):
    patch_size: Any
    max_patches: Any
    random_state: Any
    def __init__(
        self,
        *,
        patch_size: Any | None = ...,
        max_patches: Any | None = ...,
        random_state: Any | None = ...
    ) -> None: ...
    def fit(self, X, y: Any | None = ...): ...
    def transform(self, X): ...
