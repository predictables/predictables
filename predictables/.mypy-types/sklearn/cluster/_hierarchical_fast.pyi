from typing import Any, ClassVar

class UnionFind:
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class WeightedEdge:
    a: ClassVar[getset_descriptor] = ...
    b: ClassVar[getset_descriptor] = ...
    weight: ClassVar[getset_descriptor] = ...
    __hash__: ClassVar[None] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
def __pyx_unpickle_UnionFind(*args, **kwargs) -> Any: ...
def __pyx_unpickle_WeightedEdge(*args, **kwargs) -> Any: ...
def _get_parents(*args, **kwargs) -> Any: ...
def _hc_get_descendent(*args, **kwargs) -> Any: ...
def _single_linkage_label(*args, **kwargs) -> Any: ...
def average_merge(*args, **kwargs) -> Any: ...
def compute_ward_dist(*args, **kwargs) -> Any: ...
def hc_get_heads(*args, **kwargs) -> Any: ...
def max_merge(*args, **kwargs) -> Any: ...
def mst_linkage_core(*args, **kwargs) -> Any: ...
def single_linkage_label(*args, **kwargs) -> Any: ...
