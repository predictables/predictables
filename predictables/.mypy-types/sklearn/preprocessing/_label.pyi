from ..base import BaseEstimator, TransformerMixin
from typing import Any

class LabelEncoder(TransformerMixin, BaseEstimator):
    classes_: Any
    def fit(self, y): ...
    def fit_transform(self, y): ...
    def transform(self, y): ...
    def inverse_transform(self, y): ...

class LabelBinarizer(TransformerMixin, BaseEstimator):
    neg_label: Any
    pos_label: Any
    sparse_output: Any
    def __init__(
        self, *, neg_label: int = ..., pos_label: int = ..., sparse_output: bool = ...
    ) -> None: ...
    y_type_: Any
    sparse_input_: Any
    classes_: Any
    def fit(self, y): ...
    def fit_transform(self, y): ...
    def transform(self, y): ...
    def inverse_transform(self, Y, threshold: Any | None = ...): ...

def label_binarize(
    y, *, classes, neg_label: int = ..., pos_label: int = ..., sparse_output: bool = ...
): ...

class MultiLabelBinarizer(TransformerMixin, BaseEstimator):
    classes: Any
    sparse_output: Any
    def __init__(
        self, *, classes: Any | None = ..., sparse_output: bool = ...
    ) -> None: ...
    classes_: Any
    def fit(self, y): ...
    def fit_transform(self, y): ...
    def transform(self, y): ...
    def inverse_transform(self, yt): ...
