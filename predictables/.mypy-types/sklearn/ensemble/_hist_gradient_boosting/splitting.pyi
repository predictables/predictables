from typing import Any, ClassVar

class SplitInfo:
    def __init__(self, *args, **kwargs) -> None: ...

class Splitter:
    X_binned: ClassVar[getset_descriptor] = ...
    has_missing_values: ClassVar[getset_descriptor] = ...
    hessians_are_constant: ClassVar[getset_descriptor] = ...
    is_categorical: ClassVar[getset_descriptor] = ...
    l2_regularization: ClassVar[getset_descriptor] = ...
    left_indices_buffer: ClassVar[getset_descriptor] = ...
    min_gain_to_split: ClassVar[getset_descriptor] = ...
    min_hessian_to_split: ClassVar[getset_descriptor] = ...
    min_samples_leaf: ClassVar[getset_descriptor] = ...
    missing_values_bin_idx: ClassVar[getset_descriptor] = ...
    monotonic_cst: ClassVar[getset_descriptor] = ...
    n_bins_non_missing: ClassVar[getset_descriptor] = ...
    n_features: ClassVar[getset_descriptor] = ...
    n_threads: ClassVar[getset_descriptor] = ...
    partition: ClassVar[getset_descriptor] = ...
    right_indices_buffer: ClassVar[getset_descriptor] = ...
    __pyx_vtable__: ClassVar[PyCapsule] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def find_node_split(self, *args, **kwargs) -> Any: ...
    def split_indices(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

def __pyx_unpickle_Enum(*args, **kwargs) -> Any: ...
def __pyx_unpickle_Splitter(*args, **kwargs) -> Any: ...
def compute_node_value(*args, **kwargs) -> Any: ...
